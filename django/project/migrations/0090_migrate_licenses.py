# Generated by Django 4.2.3 on 2023-09-21 13:02

from django.db import migrations


def migrate_licenses(apps, schema_editor):
    Project = apps.get_model('project', 'Project')
    Licence = apps.get_model('project', 'Licence')

    freemium = Licence.all_objects.get(name='Freemium')
    non_protective = Licence.all_objects.get(name__icontains='Non protective free')
    open_source = Licence.all_objects.get(name='Open Source Software')
    protective = Licence.all_objects.get(name='Protective free and open source software')
    public_domain = Licence.all_objects.get(name='Public domain')

    counter = 0
    print('\n')

    data_fields = ['draft', 'data']

    for project in Project.projects.all():
        for field_name in data_fields:
            if 'licenses' in getattr(project, field_name) and getattr(project, field_name)['licenses']:
                if freemium.id in getattr(project, field_name)['licenses']:
                    getattr(project, field_name)['zero_cost'] = 2  # Yes, with restrictions
                if non_protective.id in getattr(project, field_name)['licenses']:
                    getattr(project, field_name)['codebase_accessible'] = 1  # Yes
                    getattr(project, field_name)['is_customizable'] = 1  # Yes
                if open_source.id in getattr(project, field_name)['licenses']:
                    getattr(project, field_name)['codebase_accessible'] = 1  # Yes
                    getattr(project, field_name)['is_customizable'] = 1  # Yes
                if protective.id in getattr(project, field_name)['licenses']:
                    getattr(project, field_name)['codebase_accessible'] = 1  # Yes
                    getattr(project, field_name)['is_customizable'] = 1  # Yes
                    getattr(project, field_name)['free_replication'] = 1  # Yes
                if public_domain.id in getattr(project, field_name)['licenses']:
                    getattr(project, field_name)['codebase_accessible'] = 1  # Yes
                    getattr(project, field_name)['is_customizable'] = 1  # Yes
                    getattr(project, field_name)['free_replication'] = 1  # Yes

                project.save(update_fields=[field_name])

                counter += 1
    print(f'\nUpdated {counter} fields', end='\r', flush=True)


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0089_load_osi_licenses'),
    ]

    operations = [
        migrations.RunPython(migrate_licenses, reverse_code=migrations.RunPython.noop),
    ]
