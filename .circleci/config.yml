# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: pulilab/who-maps-circleci
    working_directory: ~/who-maps

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-f-{{ checksum "frontend/package.json" }}
          - v1-dependencies-f-
      - restore_cache:
          keys:
          - v3-dependencies-b-{{ checksum "django/requirements.txt" }}
          - v3-dependencies-b-
      - run:
          working_directory: ~/who-maps/frontend
          command: yarn install

      - run:
          working_directory: ~/who-maps
          command: yarn global add mapshaper

      - run:
          working_directory: ~/who-maps
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-dependencies-f-{{ checksum "frontend/package.json" }}
          paths:
            - ~/who-maps/django/venv
          key: v3-dependencies-b-{{ checksum "django/requirements.txt" }}


      # run tests!

      - run:
          name: frontend unit tests
          working_directory: ~/who-maps/frontend
          command: yarn test

      - run:
          name: backend flake8
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            flake8

      - run:
          name: backend migrations
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            service postgresql start
            DATABASE_URL=localhost python3 manage.py migrate

      - run:
          name: backend unit tests
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            service postgresql start

            DATABASE_URL=localhost CI_RUN=True py.test --cov --cov-report html --cov-fail-under 100 --cov-report term-missing --cov-config .coveragerc

