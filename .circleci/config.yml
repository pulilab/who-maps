version: 2.1

orbs:
  jira: circleci/jira@1.1.0

jobs:
  build:
    docker:
      - image: circleci/python:3.7.5-stretch
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PGHOST: 127.0.0.1
          PGUSER: postgres
          DATABASE_URL: ''
          CI_RUN: True
          ODK_SYNC_ENABLED: False
      - image: circleci/postgres:10.9-alpine-postgis-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
      - image: circleci/node:12.13.0-stretch
      - image: circleci/redis:5-stretch
        environment:
          REDIS_URL: 127.0.0.1


    working_directory: ~/who-maps

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-f-{{ checksum "frontend/package.json" }}
          - v1-dependencies-f-
      - restore_cache:
          keys:
          - v4-dependencies-b-{{ checksum "django/requirements.txt" }}
          - v4-dependencies-b-
      - run:
          working_directory: ~/who-maps/frontend
          command: yarn install

      - run:
          working_directory: ~/who-maps
          command: yarn global add mapshaper

      - run:
          working_directory: ~/who-maps
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install wheel
            pip install -r django/requirements.txt

      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-dependencies-f-{{ checksum "frontend/package.json" }}
          paths:
            - ~/who-maps/venv
          key: v4-dependencies-b-{{ checksum "django/requirements.txt" }}


      # run tests!

#      - run:
#          name: frontend unit tests
#          working_directory: ~/who-maps/frontend
#          command: yarn test

      - run:
          name: backend flake8
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            flake8

      - run:
          name: start services
          working_directory: ~/who-maps/django
          command: |
            service postgresql start
            service redis-server start

      - run:
          name: backend migrations
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            python3 manage.py migrate

      - run:
          name: backend unit tests
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            py.test --cov --cov-report html --cov-fail-under 100 --cov-report term-missing --cov-config .coveragerc

  deploy:
    docker:
      - image: pulilab/who-maps-circleci
    working_directory: ~/who-maps
    steps:
      - checkout
      - run:
          name: Install fabric and pycrypto
          command: |
            pip install pycrypto
            pip install Fabric3==1.10.2.post3

      - run:
          name: Deploy Over SSH
          working_directory: ~/who-maps/django
          command: |
            fab dev deploy
          no_output_timeout: "20m"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: development