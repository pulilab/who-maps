version: 2.1

orbs:
  jira: circleci/jira@1.3.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.11-node
        environment:
          PIPENV_VENV_IN_PROJECT: true
          PGHOST: 127.0.0.1
          PGUSER: postgres
          DATABASE_URL: ''
          CI_RUN: True
          REDIS_URL: 127.0.0.1
      - image: cimg/postgres:15.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
      - image: cimg/redis:7.0
        environment:
          REDIS_URL: 127.0.0.1

    working_directory: ~/who-maps

    steps:
      - checkout

      - restore_cache:
          keys:
            - v9-dependencies-b-{{ checksum "django/requirements.txt" }}

      - restore_cache:
          key: &deps1-cache deps1-{{ .Branch }}-{{ checksum "django/requirements.txt" }}

      - run:
          name: install Python packages
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            python3 -m venv venv
            . venv/bin/activate
            pip install -r django/requirements.txt

      - run:
          name: install frontend reqs
          working_directory: ~/who-maps/frontend
          command: yarn install

      - save_cache:
          key: *deps1-cache
          paths:
            - "venv"

      - save_cache:
          paths:
            - frontend/node_modules
          key: v3-dependencies-f-{{ checksum "frontend/package.json" }}

      - run:
          name: backend flake8
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            flake8

      - run:
          name: backend makemigrations
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate
            touch .env
            python manage.py makemigrations --noinput

      - run:
          name: backend migrations
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate            
            python manage.py migrate

      - run:
          name: backend unit tests
          working_directory: ~/who-maps/django
          command: |
            . ../venv/bin/activate 
            py.test --full-trace --timeout=180 --cov --cov-report html --cov-fail-under 100 --cov-report term-missing --cov-config .coveragerc

      - run:
          name: backend check for commited migrations
          working_directory: ~/who-maps/django
          command: |
            export TERM=xterm && ! git diff --name-status origin/development HEAD | grep /migrations/0 | cut -f 2 | xargs grep "# Generated by Django"

      - jira/notify:
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'

  deploy-dev:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/who-maps
    steps:
      - checkout
      - run:
          name: Install fabric and pycrypto
          command: |
            sudo pip install pycrypto
            sudo pip install Fabric3==1.15.0
      - run:
          name: Deploy Over SSH
          working_directory: ~/who-maps/django
          command: |
            fab dev deploy
          no_output_timeout: "20m"

  deploy-qa:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/who-maps
    steps:
      - checkout
      - run:
          name: Install fabric and pycrypto
          command: |
            sudo pip install pycrypto
            sudo pip install Fabric3==1.15.0
      - run:
          name: Deploy Over SSH
          working_directory: ~/who-maps/django
          command: |
            fab staging deploy:<< pipeline.git.tag >>
          no_output_timeout: "20m"

  e2e-dev:
    docker:
      - image: cypress/included:4.5.0
    working_directory: ~/who-maps
    steps:
      - checkout
      - run:
          name: e2e tests against DEV
          working_directory: ~/who-maps/e2e
          command: |
            cypress run -C cypress.dev.json
          no_output_timeout: "20m"
      - store_artifacts:
          path: /root/who-maps/e2e/cypress/videos
      - store_artifacts:
          path: /root/who-maps/e2e/cypress/screenshots

workflows:
  build-and-deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - deploy-dev:
          requires:
            - build-and-test
          filters:
            branches:
              only: development
          post-steps:
            - jira/notify:
                environment_type: development
                job_type: deployment
                issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
                environment: DEV  # DEV, PROD, QA
      - e2e-dev:
          requires:
            - build-and-test
            - deploy-dev
          filters:
            branches:
              only: development
      - deploy-qa:
          name: QA Server Deployment
          requires:
            - build-and-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
          post-steps:
            - jira/notify:
                environment_type: staging
                job_type: deployment
                issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
                environment: QA  # DEV, PROD, QA
