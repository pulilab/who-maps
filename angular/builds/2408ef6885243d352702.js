webpackJsonp([8],{1489:function(e,n){e.exports='<div class="project-section section-strategy" md-whiteframe="2">\n  <div class="section-title md-title">\n    <translate>2. Implementation overview</translate>\n    <span class="toggler" ng-click="vm.collapse()"><i class="material-icons">keyboard_arrow_down</i></span>\n  </div>\n\n  <div class="section-wrapper">\n    <h6 class="first required">\n      <translate>Add one or more Software and related Digital Health Interventions (DHI):</translate>\n    </h6>\n\n    <div class="software-dhi input-group" ng-repeat="platform in vm.project.platforms">\n      <div layout="row">\n        <md-input-container flex="33">\n          <label>\n            <translate>Software (select from list)</translate>\n          </label>\n          <md-select ng-model="platform.id" name="{{\'platforms_\'+ $index + \'.id\' }}" ng-required="vm.activateValidation" >\n            <md-option ng-value="plat.id" ng-repeat="plat in platform.available">\n              {{plat.name}}\n            </md-option>\n          </md-select>\n          <div ng-messages="vm.form[\'platforms_\' + $index + \'.id\'].$error">\n            <div ng-message="required">\n              <translate>This is required.</translate>\n            </div>\n            <div ng-message="custom">\n              <div ng-repeat="message in vm.form[\'platforms_\' + $index + \'.id\'].customError">\n                {{message}}\n              </div>\n            </div>\n          </div>\n        </md-input-container>\n\n        <div class="add-more-item" flex="33">\n          <div layout="row" layout-align="start end">\n            <md-button class="md-primary" aria-label="Add more"\n                       ng-show="vm.showAddMore($index, vm.project.platforms)"\n                       ng-click="vm.addChild(\'platforms\')">\n              <md-icon><i class="material-icons">&#xE145;</i></md-icon>\n              <translate>Add more</translate>\n            </md-button>\n            <md-button class="md-warn" aria-label="Remove"\n                       ng-show="vm.showRemove($index, vm.project.platforms)"\n                       ng-click="vm.removeChild($index, \'platforms\')">\n              <md-icon><i class="material-icons">&#xE15B;</i></md-icon>\n              <translate>Remove</translate>\n            </md-button>\n          </div>\n        </div>\n      </div>\n\n      <dialog-multi-selector\n        ng-show="platform.id"\n        selection="platform.strategies"\n        button-name="{{\'Digital Health Interventions\' | translate }}"\n        is-required="vm.activateValidation"\n        show-title="true"\n        elements="vm.structure.strategies"\n        collection-name="strategies"\n        name="\'platforms_\'+ $index + \'.strategies\'"\n        form-element="vm.form[\'platforms_\'+ $index + \'.strategies\']"\n        dialog-name="platform.name">\n      </dialog-multi-selector>\n    </div>\n  </div>\n\n  <div class="section-wrapper">\n\n    <div class="essential md-block">\n      <h6>\n        <translate>Health focus area(s) - select all that apply:</translate>\n      </h6>\n      <dialog-multi-selector\n        selection="vm.project.health_focus_areas"\n        button-name="{{\'Health focus area\' | translate }}"\n        elements="vm.health_focus_areas"\n        name="\'health_focus_areas\'"\n        on-close="vm.dispatchChange"\n        form-element="vm.form.health_focus_areas"\n        collection-name="health_focus_areas">\n      </dialog-multi-selector>\n    </div>\n\n    <div class="md-block extra-margin-double">\n      <md-input-container class="md-block">\n        <label>\n          <translate>What are the Health System Challenges (HSC) your project addresses?</translate>\n        </label>\n        <md-select ng-model="vm.project.hsc_challenges" md-on-close="vm.dispatchChange(\'hsc_challenges\', vm.project.hsc_challenges)"\n        md-select-separator="empty" name="hsc_challenges" ng-required="vm.activateValidation" multiple>\n          <md-optgroup label="{{hsc.name}}" ng-repeat="hsc in vm.structure.hsc_challenges">\n            <md-option value="{{challenge.id}}" ng-repeat="challenge in hsc.challenges">\n              {{challenge.challenge}}\n            </md-option>\n          </md-optgroup>\n        </md-select>\n        <div ng-messages="vm.form.hsc.$error">\n          <div ng-message="required">\n            <translate>This is required.</translate>\n          </div>\n        </div>\n      </md-input-container>\n    </div>\n\n    <div class="md-block first extra-margin-double">\n      <md-input-container class="md-block">\n        <label>\n          <translate>What part(s) of the Health Information System (HIS) does this project support?</translate>\n        </label>\n        <md-select ng-model="vm.project.his_bucket" md-on-close="vm.dispatchChange(\'his_bucket\', vm.project.his_bucket)"\n        md-select-separator="empty" name="his_bucket" ng-required="vm.activateValidation" multiple>\n          <md-option value="{{his.id}}" ng-repeat="his in vm.structure.his_bucket">\n            {{his.name}}\n          </md-option>\n        </md-select>\n        <div ng-messages="vm.form.his.$error">\n          <div ng-message="required">\n            <translate>This is required.</translate>\n          </div>\n        </div>\n      </md-input-container>\n    </div>\n\n    <h6 class="extra-margin required">\n      <translate>What kind of coverage does your project have?</translate>\n      </h6>\n\n    <div class="md-block extra-margin">\n      <div layout="column">\n        <md-radio-group ng-model="vm.project.coverageType"\n        ng-change="vm.dispatchChange(\'coverageType\', vm.project.coverageType)"\n        name="coverageType" md-no-ink ng-required="vm.activateValidation" class="md-primary" layout="row">\n          <md-radio-button ng-value="1" aria-label="coverage-type-yes">\n            <translate>Sub-national</translate>\n          </md-radio-button>\n          <md-radio-button ng-value="2" aria-label="coverage-type-no">\n            <translate>National</translate>\n          </md-radio-button>\n        </md-radio-group>\n        <div class="radio-error-messages">\n          <div ng-messages="vm.form.coverageType.$error">\n            <div ng-message="required">\n              <translate>This is required.</translate>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div ng-show="vm.project.coverageType === 1" class="md-block extra-margin-double">\n      <h6 class="subtitle"><i class="material-icons">&#xE567;</i>\n        <translate>{{vm.subLevelNames[0]}} level deployment</translate>\n      </h6>\n\n      <div class="input-group" ng-repeat="cov in vm.project.coverage">\n        <div layout="column">\n          <div layout="row">\n            <md-input-container class="district" flex="45">\n              <label class="text-capitalize">\n                {{vm.subLevelNames[0]}}\n              </label>\n              <md-select ng-model="cov.district"\n                         aria-label="{{\'coverage_\' + $index + \'.district\'}}"\n                         name="{{\'coverage_\' + $index + \'.district\'}}"\n                         ng-required="vm.isSubLevelCoverageDistrictRequired(cov)">\n                <md-option value="{{district.id}}" ng-repeat="district in cov.available">\n                  {{district.name}}\n                </md-option>\n                <md-option md-option-empty ng-hide="vm.districtList.length">\n                  <translate>Select a country </translate>\n                </md-option>\n              </md-select>\n              <div ng-messages="vm.form[\'coverage_\' + $index + \'.district\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_\' + $index + \'.district\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n          </div>\n\n          <div layout="row" ng-if="vm.facilities.length > 0" class="no-float">\n            <md-chips ng-model="cov.facilities_list" md-autocomplete-snap\n                      md-on-add="vm.updateFacilityNumber(cov)"\n                      md-on-remove="vm.updateFacilityNumber(cov)"\n                      md-require-match="true">\n              <md-autocomplete\n                md-no-cache\n                md-search-text="cov.facilitySearch"\n                md-items="item in vm.searchFacility(cov.facilitySearch, cov.facilities_list)"\n                md-item-text="item"\n                placeholder="{{\'Search Facilities\' | translate}}">\n                <span md-highlight-text="ctrl.searchText">{{item}}</span>\n              </md-autocomplete>\n              <md-chip-template>\n                <span>\n                  {{$chip}}\n                </span>\n              </md-chip-template>\n            </md-chips>\n          </div>\n\n          <div layout="row">\n            <md-input-container class="number" flex="20">\n              <label>\n                <translate># Health Workers</translate>\n              </label>\n              <input ng-required="vm.isSubLevelCoverageRequired()"\n                     name="{{\'coverage_\' + $index}}.health_workers"\n                     type="number"\n                     min="0"\n                     ng-model="cov.health_workers" >\n              <div ng-messages="vm.form[\'coverage_\' + $index + \'.health_workers\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_\' + $index + \'.health_workers\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <md-input-container class="number" flex="20" ng-show="vm.facilities.length === 0">\n              <label>\n                <translate># Facilities</translate>\n              </label>\n              <input ng-required="vm.isSubLevelCoverageRequired()"\n                     name="{{\'coverage_\' + $index}}.facilities"\n                     type="number"\n                     min="0"\n                     ng-model="cov.facilities">\n              <div ng-messages="vm.form[\'coverage_\' + $index + \'.facilities\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_\' + $index + \'.facilities\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <md-input-container class="number" flex="20">\n              <label>\n                <translate># Clients</translate>\n              </label>\n              <input ng-required="vm.isSubLevelCoverageRequired()"\n                     name="{{\'coverage_\' + $index}}.clients"\n                     type="number"\n                     min="0"\n                     ng-model="cov.clients">\n              <div ng-messages="vm.form[\'coverage_\' + $index + \'.clients\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_\' + $index + \'.clients\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <div class="add-more-item" flex="40">\n              <md-button class="md-warn" aria-label="Remove"\n                         ng-show="vm.showRemove($index, vm.project.coverage)"\n                         ng-click="vm.removeChild($index, \'coverage\')">\n                <md-icon><i class="material-icons">&#xE15B;</i></md-icon>\n                <translate>Remove</translate>\n              </md-button>\n              <md-button class="md-primary" aria-label="Add more"\n                         ng-show="vm.showAddMore($index, vm.project.coverage)"\n                         ng-click="vm.addChild(\'coverage\')">\n                <md-icon><i class="material-icons">&#xE145;</i></md-icon>\n                <translate>Add more</translate>\n              </md-button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      \x3c!--NEW COVERAGE LAYER--\x3e\n\n      <h6 class="subtitle" ng-if-start="vm.subLevelNames[1]">\n        <i class="material-icons">&#xE567;</i>\n        <translate>{{vm.subLevelNames[1]}} level deployment</translate>\n      </h6>\n\n      <div class="input-group" ng-repeat="cov in vm.project.coverage_second_level" ng-if-end>\n        <div layout="column">\n          <div layout="row">\n            <md-input-container class="district" flex="45">\n              <label class="text-capitalize">\n                {{vm.subLevelNames[1]}}\n              </label>\n              <md-select ng-model="cov.district"\n                         aria-label="{{\'coverage_second_level_\' + $index + \'.district\'}}"\n                         name="{{\'coverage_second_level_\' + $index + \'.district\'}}"\n                         ng-required="vm.isSubLevelCoverageDistrictRequired(cov)">\n                <md-option value="{{district.id}}" ng-repeat="district in cov.available">\n                  {{district.name}}\n                </md-option>\n                <md-option md-option-empty ng-hide="vm.secondSubLevelList.length">\n                  <translate>Select a country </translate>\n                </md-option>\n              </md-select>\n              <div ng-messages="vm.form[\'coverage_second_level_\' + $index + \'.district\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_second_level_\' + $index + \'.district\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n          </div>\n          <div layout="row" ng-if="vm.facilities.length > 0" class="no-float">\n            <md-chips ng-model="cov.facilities_list" md-autocomplete-snap\n                      md-on-add="vm.updateFacilityNumber(cov)"\n                      md-on-remove="vm.updateFacilityNumber(cov)"\n                      md-require-match="true">\n              <md-autocomplete\n                md-no-cache\n                md-search-text="cov.facilitySearch"\n                md-items="item in vm.searchFacility(cov.facilitySearch, cov.facilities_list)"\n                md-item-text="item"\n                placeholder="{{\'Search Facilities\' | translate}}">\n                <span md-highlight-text="ctrl.searchText">{{item}}</span>\n              </md-autocomplete>\n              <md-chip-template>\n                <span>\n                  {{$chip}}\n                </span>\n              </md-chip-template>\n            </md-chips>\n\n          </div>\n          <div layout="row">\n            <md-input-container class="number" flex="20">\n              <label>\n                <translate># Health Workers</translate>\n              </label>\n              <input\n                name="{{\'coverage_second_level_\' + $index}}.health_workers"\n                type="number"\n                min="0"\n                ng-model="cov.health_workers" >\n              <div ng-messages="vm.form[\'coverage_second_level_\' + $index + \'.health_workers\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_second_level_\' + $index + \'.health_workers\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <md-input-container class="number" flex="20" ng-show="vm.facilities.length === 0">\n              <label>\n                <translate># Facilities</translate>\n              </label>\n              <input\n                name="{{\'coverage_second_level_\' + $index}}.facilities"\n                type="number"\n                min="0"\n                ng-model="cov.facilities">\n              <div ng-messages="vm.form[\'coverage_second_level_\' + $index + \'.facilities\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_second_level_\' + $index + \'.facilities\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <md-input-container class="number" flex="20">\n              <label>\n                <translate># Clients</translate>\n              </label>\n              <input\n                name="{{\'coverage_second_level_\' + $index}}.clients"\n                type="number"\n                min="0"\n                ng-model="cov.clients">\n              <div ng-messages="vm.form[\'coverage_second_level_\' + $index + \'.clients\'].$error">\n                <div ng-message="required">\n                  <translate>This is required.</translate>\n                </div>\n                <div ng-message="custom">\n                  <div ng-repeat="message in vm.form[\'coverage_second_level_\' + $index + \'.clients\'].customError">\n                    {{message}}\n                  </div>\n                </div>\n              </div>\n            </md-input-container>\n            <div class="add-more-item" flex="40">\n              <md-button class="md-warn" aria-label="Remove"\n                         ng-show="vm.showRemove($index, vm.project.coverage_second_level)"\n                         ng-click="vm.removeChild($index, \'coverage_second_level\')">\n                <md-icon><i class="material-icons">&#xE15B;</i></md-icon>\n                <translate>Remove</translate>\n              </md-button>\n              <md-button class="md-primary" aria-label="Add more"\n                         ng-show="vm.showAddMore($index, vm.project.coverage_second_level)"\n                         ng-click="vm.addChild(\'coverage_second_level\')">\n                <md-icon><i class="material-icons">&#xE145;</i></md-icon>\n                <translate>Add more</translate>\n              </md-button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n\n    <div ng-show="vm.project.coverageType === 2" class="md-block extra-margin-double">\n      <h6 class="subtitle first"><i class="material-icons">&#xE153;</i>\n        <translate>National level deployment</translate>\n      </h6>\n\n      <div class="input-group">\n        <div layout="row">\n          <md-input-container class="number" flex="20">\n            <label>\n              <translate># Health Workers</translate>\n            </label>\n            <input type="number"\n                   min="0"\n                   name="national_level_deployment.health_workers"\n                   ng-change="vm.dispatchChange(\'national_level_deployment\', vm.project.national_level_deployment)"\n                   ng-required="vm.isNationalLevelCoverageRequired()"\n                   ng-model="vm.project.national_level_deployment.health_workers">\n            <div ng-messages="vm.form[\'national_level_deployment.health_workers\'].$error">\n              <div ng-message="required">\n                <translate>This is required.</translate>\n              </div>\n              <div ng-message="custom">\n                <div ng-repeat="message in vm.form[\'national_level_deployment.health_workers\'].customError">\n                  {{message}}\n                </div>\n              </div>\n            </div>\n          </md-input-container>\n          <md-input-container class="number" flex="20">\n            <label>\n              <translate># Facilities</translate>\n            </label>\n            <input type="number"\n                   min="0"\n                   name="national_level_deployment.facilities"\n                   ng-required="vm.isNationalLevelCoverageRequired()"\n                   ng-change="vm.dispatchChange(\'national_level_deployment\', vm.project.national_level_deployment)"\n                   ng-model="vm.project.national_level_deployment.facilities">\n            <div ng-messages="vm.form[\'national_level_deployment.facilities\'].$error">\n              <div ng-message="required">\n                <translate>This is required.</translate>\n              </div>\n              <div ng-message="custom">\n                <div ng-repeat="message in vm.form[\'national_level_deployment.facilities\'].customError">\n                  {{message}}\n                </div>\n              </div>\n            </div>\n          </md-input-container>\n          <md-input-container class="number" flex="20">\n            <label>\n              <translate># Clients</translate>\n            </label>\n            <input type="number"\n                   min="0"\n                   name="national_level_deployment.clients"\n                   ng-required="vm.isNationalLevelCoverageRequired()"\n                   ng-change="vm.dispatchChange(\'national_level_deployment\', vm.project.national_level_deployment)"\n                   ng-model="vm.project.national_level_deployment.clients">\n            <div ng-messages="vm.form[\'national_level_deployment.clients\'].$error">\n              <div ng-message="required">\n                <translate>This is required.</translate>\n              </div>\n              <div ng-message="custom">\n                <div ng-repeat="message in vm.form[\'national_level_deployment.clients\'].customError">\n                  {{message}}\n                </div>\n              </div>\n            </div>\n          </md-input-container>\n          <div flex="40"></div>\n        </div>\n      </div>\n    </div>\n\n\n    <h6 class="required extra-margin">\n      <translate>Has the government financially invested in the project?</translate>\n    </h6>\n\n    <div class="md-block extra-margin">\n      <div layout="column">\n        <md-radio-group ng-model="vm.project.government_investor"\n        ng-change="vm.dispatchChange(\'government_investor\', vm.project.government_investor)"\n        name="government_investor" md-no-ink ng-required="vm.activateValidation" class="md-primary" layout="column">\n          <md-radio-button ng-value="0" aria-label="government-investor-no">\n            <translate>No, they have not yet contributed</translate>\n          </md-radio-button>\n          <md-radio-button ng-value="1" aria-label="government-investor-yes-1">\n            <translate>Yes, they are contributing in-kind people or time</translate>\n          </md-radio-button>\n          <md-radio-button ng-value="2" aria-label="government-investor-yes-2">\n            <translate>Yes, there is a financial contribution through MOH budget</translate>\n          </md-radio-button>\n        </md-radio-group>\n        <div class="radio-error-messages">\n          <div ng-messages="vm.form.government_investor.$error">\n            <div ng-message="required">\n              <translate>This is required.</translate>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <h6>\n      <translate>Implementing partners</translate>\n    </h6>\n\n    <md-input-container class="error-placeholder">\n      <input  name="implementing_partners" ng-model="vm.hiddenFields" aria-label="hidden">\n      <div ng-messages="vm.form.implementing_partners.$error">\n        <div ng-message="custom">\n          <div ng-repeat="message in vm.form.implementing_partners.customError">\n            {{message}}\n          </div>\n        </div>\n      </div>\n    </md-input-container>\n\n    <div layout="row" ng-repeat="partner in vm.project.implementing_partners" ng-class="{last: $last}" class="no-float">\n      <md-input-container md-no-float flex="50">\n        <input ng-model="partner.value"\n               ng-change="vm.dispatchChange(\'implementing_partners\', vm.project.implementing_partners)"\n               placeholder="{{\'Partner\\\'s name\' | translate }}"\n               md-maxlength="64">\n      </md-input-container>\n      <div class="add-more-item">\n        <md-button class="md-warn" aria-label="Remove"\n                   ng-show="vm.showRemove($index, vm.project.implementing_partners)"\n                   ng-click="vm.removeChild($index, \'implementing_partners\')">\n          <md-icon><i class="material-icons">&#xE15B;</i></md-icon>\n          <translate>Remove</translate>\n        </md-button>\n        <md-button class="md-primary" aria-label="Add more"\n                   ng-show="vm.showAddMore($index, vm.project.implementing_partners)"\n                   ng-click="vm.addChild(\'implementing_partners\')">\n          <md-icon><i class="material-icons">&#xE145;</i></md-icon>\n          <translate>Add more</translate>\n        </md-button>\n      </div>\n    </div>\n\n    <h6 class="required">\n      <translate>Donors (Add one at least)</translate>\n    </h6>\n\n    <md-input-container class="error-placeholder">\n      <input  name="donors" ng-model="vm.hiddenFields" aria-label="hidden">\n      <div ng-messages="vm.form.donors.$error">\n        <div ng-message="custom">\n          <div ng-repeat="message in vm.form.donors.customError">\n            {{message}}\n          </div>\n        </div>\n      </div>\n    </md-input-container>\n\n    <div layout="row" ng-repeat="donor in vm.project.donors" ng-class="{last: $last}" class="no-float">\n      <md-input-container md-no-float flex="50">\n        <input ng-model="donor.value"\n               ng-change="vm.dispatchChange(\'donors\', vm.project.donors)"\n               placeholder="{{\'Donor\\\'s name\' | translate }}"\n               md-maxlength="64" ng-required="vm.activateValidation" name="{{\'donor_\' + $index}}">\n        <div ng-messages="vm.form[\'donor_\' + $index].$error">\n          <div ng-message="required">\n            <translate>This is required.</translate>\n          </div>\n          <div ng-message="md-maxlength">\n            <translate>This field has to be less than 64 characters long.</translate>\n          </div>\n        </div>\n      </md-input-container>\n\n      <div class="add-more-item">\n        <md-button class="md-warn" aria-label="Remove"\n                   ng-show="vm.showRemove($index, vm.project.donors)"\n                   ng-click="vm.removeChild($index, \'donors\')">\n          <md-icon><i class="material-icons">&#xE15B;</i></md-icon>\n          <translate>Remove</translate>\n        </md-button>\n        <md-button class="md-primary" aria-label="Add more"\n                   ng-show="vm.showAddMore($index, vm.project.donors)"\n                   ng-click="vm.addChild(\'donors\')">\n          <md-icon><i class="material-icons">&#xE145;</i></md-icon>\n          <translate>Add more</translate>\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},1490:function(e,n){},1491:function(e,n){e.exports='<div class="project-section section-strategy read-only" md-whiteframe="2">\n  <div class="section-title md-title">\n    <translate>2. Implementation overview</translate>\n    <span class="toggler" ng-click="vm.collapse()"><i class="material-icons">keyboard_arrow_down</i></span>\n  </div>\n\n  <div class="section-wrapper">\n    <h6>\n      <translate>Add one or more Software and related Digital Health Interventions (DHI):</translate>\n    </h6>\n\n    <div class="input-group" ng-repeat="platform in vm.project.platforms">\n      <div class="extra-margin">\n        <h6>\n          <translate>Software</translate>\n        </h6>\n        <p>{{platform.name}}</p>\n      </div>\n      <div>\n        <h6>\n          <translate>Digital Health Interventions</translate>\n        </h6>\n        <div layout="row">\n          <ul>\n            <li ng-repeat="s in platform.strategies">{{s.name}}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="section-wrapper">\n\n    <h6>\n      <translate>Health focus area(s)</translate>\n    </h6>\n\n    <div>\n      <ul>\n        <li ng-repeat="hf in vm.project.health_focus_areas">{{hf.name}}</li>\n      </ul>\n    </div>\n\n    <h6>\n      <translate>What are the Health System Challenges (HSC) your project addresses?</translate>\n    </h6>\n\n    <div>\n      <ul>\n        <li ng-repeat="hsc in vm.project.hsc_challenges">{{hsc.challenge}}</li>\n      </ul>\n    </div>\n\n    <h6>\n      <translate>What part(s) of the Health Information System (HIS) does this project support?</translate>\n    </h6>\n\n    <div>\n      <ul>\n        <li ng-repeat="his in vm.project.his_bucket">{{his.name}}</li>\n      </ul>\n    </div>\n\n    <h6>\n      <translate>What kind of coverage does your project have?</translate>\n    </h6>\n\n    <div>\n      <div layout="column">\n        <span ng-show="vm.project.coverageType === 1">\n          <translate>Sub-national</translate>\n        </span>\n        <span ng-show="vm.project.coverageType === 2">\n          <translate>National</translate>\n        </span>\n      </div>\n    </div>\n\n    <div ng-show="vm.project.coverageType === 1">\n      <h6 class="subtitle"><i class="material-icons">&#xE567;</i>\n        <translate> {{vm.subLevelNames[0]}} level deployment</translate>\n      </h6>\n\n      <div class="input-group" ng-repeat="cov in vm.project.coverage">\n        <div layout="column">\n          <div layout="row">\n            <div class="district" flex="50">\n              <h6 class="text-capitalize">\n                {{vm.subLevelNames[0]}}\n              </h6>\n              <p>{{cov.district}}</p>\n            </div>\n            <div flex="50"></div>\n          </div>\n          <div layout="row">\n            <div class="number" flex="20">\n              <h6>\n                <translate># Health Workers</translate>\n              </h6>\n              <p>{{cov.health_workers}}</p>\n            </div>\n            <div class="number" flex="20">\n              <h6>\n                <translate># Facilities</translate>\n              </h6>\n              <p>{{cov.facilities}}</p>\n            </div>\n            <div class="number" flex="20">\n              <h6>\n                <translate># Clients</translate>\n              </h6>\n              <p>{{cov.clients}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h6 class="subtitle" ng-show="vm.project.coverage_second_level && vm.project.coverage_second_level.length > 0">\n        <i class="material-icons">&#xE567;</i>\n        <translate> {{vm.subLevelNames[1]}} level deployment</translate>\n      </h6>\n      <div class="input-group" ng-repeat="cov in vm.project.coverage_second_level">\n        <div layout="column">\n          <div layout="row">\n            <div class="district" flex="50">\n              <h6 class="text-capitalize">\n                {{vm.subLevelNames[1]}}\n              </h6>\n              <p>{{cov.district}}</p>\n            </div>\n            <div flex="50"></div>\n          </div>\n          <div layout="row">\n            <div class="number" flex="20">\n              <h6>\n                <translate># Health Workers</translate>\n              </h6>\n              <p>{{cov.health_workers}}</p>\n            </div>\n            <div class="number" flex="20">\n              <h6>\n                <translate># Facilities</translate>\n              </h6>\n              <p>{{cov.facilities}}</p>\n            </div>\n            <div class="number" flex="20">\n              <h6>\n                <translate># Clients</translate>\n              </h6>\n              <p>{{cov.clients}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div ng-show="vm.project.coverageType === 2">\n      <h6 class="subtitle"><i class="material-icons">&#xE153;</i>\n        <translate>National level deployment</translate>\n      </h6>\n\n      <div class="input-group">\n        <div layout="row">\n          <div class="number" flex="20">\n            <h6>\n              <translate># Health Workers</translate>\n            </h6>\n            <p>{{vm.project.national_level_deployment.health_workers}}</p>\n          </div>\n          <div class="number" flex="20">\n            <h6>\n              <translate># Facilities</translate>\n            </h6>\n            <p>{{vm.project.national_level_deployment.facilities}}</p>\n          </div>\n          <div class="number" flex="20">\n            <h6>\n              <translate># Clients</translate>\n            </h6>\n            <p>{{vm.project.national_level_deployment.clients}}</p>\n          </div>\n          <div flex="40"></div>\n        </div>\n      </div>\n    </div>\n\n    <h6>\n      <translate>Has the government financially invested in the project?</translate>\n    </h6>\n\n    <div>\n      <p ng-show="vm.project.government_investor === 0">\n        <translate>No, they have not yet contributed</translate>\n      </p>\n      <p ng-show="vm.project.government_investor === 1">\n        <translate>Yes, they are contributing in-kind people or time</translate>\n      </p>\n      <p ng-show="vm.project.government_investor === 2">\n        <translate>Yes, there is a financial contribution through MOH budget</translate>\n      </p>\n    </div>\n\n    <h6>\n      <translate>Implementing partners</translate>\n    </h6>\n\n    <div>\n      <ul>\n        <li ng-repeat="partner in vm.project.implementing_partners">{{partner}}</li>\n      </ul>\n    </div>\n\n    <h6>\n      <translate>Donors</translate>\n    </h6>\n\n    <div>\n      <ul>\n        <li ng-repeat="donor in vm.project.donors">{{donor}}</li>\n      </ul>\n    </div>\n\n  </div>\n</div>\n'},1629:function(e,n,t){var a=t(85),i=t(1630);e.exports=function(e,n){var t=[];if(!e||!e.length)return t;var r=-1,s=[],l=e.length;for(n=a(n,3);++r<l;){var o=e[r];n(o,r,e)&&(t.push(o),s.push(r))}return i(e,s),t}},1630:function(e,n,t){var a=t(1631),i=t(165),r=Array.prototype.splice;e.exports=function(e,n){for(var t=e?n.length:0,s=t-1;t--;){var l=n[t];if(t==s||l!==o){var o=l;i(l)?r.call(e,l,1):a(e,l)}}return e}},1631:function(e,n,t){var a=t(303),i=t(306),r=t(1632),s=t(123);e.exports=function(e,n){return n=a(n,e),null==(e=r(e,n))||delete e[s(i(n))]}},1632:function(e,n,t){var a=t(302),i=t(1633);e.exports=function(e,n){return n.length<2?e:a(e,i(n,0,-1))}},1633:function(e,n){e.exports=function(e,n,t){var a=-1,i=e.length;n<0&&(n=-n>i?0:i+n),(t=t>i?i:t)<0&&(t+=i),i=n>t?0:t-n>>>0,n>>>=0;for(var r=Array(i);++a<i;)r[a]=e[a+n];return r}},652:function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(10)),r=a(t(11)),s=a(t(64)),l=a(t(1629)),o=a(t(0)),d=a(t(684)),c=t(45),m=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}(t(63)),v=function(){function e(n,t,a){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],l=arguments[5];(0,i.default)(this,e),this.EE=window.EE,this.element=n,this.scope=t,this.$ngRedux=l,this.toggleClass="collapsed",this.activateClass="active",this.collectionName=a,this.resetDefaultList=r,this.emptyCheckableArray=s,this.dispatchChange=(0,d.default)(this.dispatchChange.bind(this),300)}return(0,r.default)(e,[{key:"defaultOnInit",value:function(){var e=this;this.bindElementClick(),this.elementId=this.element[0].getAttribute("id"),this.elementMainSection=this.element[0].getElementsByClassName("project-section")[0],this.EE.on("activateFieldSet",this.activateFieldSet,this),setTimeout(function(){e.EE.emit("componentLoaded",e.elementId)}),this.defaultWatchers(),this.fixUrl=c.fixUrl}},{key:"defaultWatchers",value:function(){var e=this;this.resetDefaultList&&this.resetDefaultList.length>0&&this.resetDefaultList.forEach(function(n){e.scope.$watch(function(e){return e.vm[n.toWatch]},e.emptyCustom.bind(e,n.field))}),this.emptyCheckableArray&&this.emptyCheckableArray.length>0&&this.emptyCheckableArray.forEach(function(n){e.project[n.toWatch].forEach(function(t,a){e.scope.$watch(function(e){return e.vm.project[n.toWatch][a]},e.emptyCheckable.bind(e,n.check,n.field),!0)})})}},{key:"dispatchChange",value:function(e,n){var t={};t[e]=s.default.copy(n),this.$ngRedux.dispatch(m.updateEditedProject(t))}},{key:"emptyCustom",value:function(e,n){!1===n&&(this.project[e].custom=void 0)}},{key:"emptyCheckable",value:function(e,n,t){t[e]||(t[n]=void 0)}},{key:"defaultOnDestroy",value:function(){this.EE.removeListener("projectScrollTo",this.activateFieldSet)}},{key:"bindElementClick",value:function(){var e=this,n=this;this.element[0].addEventListener("click",function(){n.EE.emit("activateFieldSet",e.elementId)})}},{key:"activateFieldSet",value:function(e){e===this.elementId?this.elementMainSection.classList.add(this.activateClass):this.elementMainSection.classList.remove(this.activateClass)}},{key:"addChild",value:function(e){var n=this[this.collectionName][e],t="string"==typeof n[0]?"":{};n.push(t)}},{key:"removeChild",value:function(e,n){var t=this[this.collectionName][n].splice(e,1);return this.dispatchChange(n,this[this.collectionName][n]),t}},{key:"showAddMore",value:function(e,n){return e===n.length-1}},{key:"showRemove",value:function(e,n){return n.length>1}},{key:"collapse",value:function(){this.elementMainSection.classList.toggle(this.toggleClass)}},{key:"findField",value:function(e){var n=this[this.collectionName][e];return n&&n.standard?n.standard:n}},{key:"checkboxToggle",value:function(e,n){if(e&&n){var t=this.findField(n);this.checkboxChecked(e,n)?(0,l.default)(t,function(n){return n===e.id}):t.push(e.id),this.dispatchChange(n,t)}}},{key:"checkboxChecked",value:function(e,n){if(!e||!n)return!1;var t=this.findField(n);return!(!t||!t.length)&&t.some(function(n){return n===e.id})}},{key:"printDate",value:function(e){return e?(0,o.default)(e).format("DD-MM-YYYY"):""}},{key:"setAvailableOptions",value:function(e,n,t){if(e&&e.length>0){var a=e.map(function(e){return e[t]}).filter(function(e){return e});e.forEach(function(e){var i=n.filter(function(e){return-1===a.indexOf(e)});e[t]&&i.push(e[t]),i.sort(function(e,n){return e.localeCompare(n)}),e.available=i})}}},{key:"setAvailableDictOptions",value:function(e,n,t){if(e&&e.length>0){t=t||"id";var a=e.filter(function(e){return e[t]});e.forEach(function(e){var i=n.filter(function(n){return e[t]===n.id||a.every(function(e){return e[t]!==n.id})});i.sort(function(e,n){return e.name.localeCompare(n.name)}),e.available=i})}}},{key:"handleCustomError",value:function(e){this.form[e]&&(this.form[e].$setValidity("custom",!0),this.form[e].customError=[])}},{key:"setCustomError",value:function(e,n){e=e.trim();var t=this.form[e];if(t){var a=t.customError||[];-1===a.indexOf(n)&&a.push(n),t.$setValidity("custom",!1),t.customError=a}else console.warn("trying to set an error on an unexisting form element: ",e)}}]),e}();n.default=v,e.exports=n.default},714:function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(15)),r=a(t(16)),s=a(t(656)),l=a(t(290)),o=a(t(291)),d=a(t(10)),c=a(t(11)),m=a(t(292)),v=a(t(293)),u=a(t(726)),p=a(t(652)),h=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}(t(46)),g=function(e){function n(e,t,a){(0,d.default)(this,n);var i=(0,m.default)(this,(n.__proto__||(0,o.default)(n)).call(this,t,e,"project",[],[],a));return i.$onInit=i.onInit.bind(i),i.$onDestroy=i.onDestroy.bind(i),i.setAvailableOptions=i.setAvailableOptions.bind(i),i.mapHealthFocusAreas=i.mapHealthFocusAreas.bind(i),i}return(0,v.default)(n,e),(0,c.default)(n,[{key:"mapData",value:function(e){var n=h.getCurrentCountrySubLevelNames(e),t=h.getCurrentCountryFacilityList(e);return{districtList:h.getCurrentCountryFirstSubLevel(e),secondSubLevelList:h.getCurrentCountrySecondSubLevel(e),subLevelNames:n,facilities:t}}},{key:"onInit",value:function(){this.districtList=[],this.defaultOnInit(),this.unsubscribe=this.$ngRedux.connect(this.mapData,h)(this),this.watchers(),this.health_focus_areas=this.mapHealthFocusAreas(this.structure.health_focus_areas),this.optionValue||(this.optionValue=this.optionLabel)}},{key:"onDestroy",value:function(){this.defaultOnDestroy(),this.unsubscribe()}},{key:"watchers",value:function(){var e=this;this.scope.$watch(function(){return e.project.platforms},function(n){e.setAvailableDictOptions(n,e.structure.technology_platforms),e.dispatchChange("platforms",n)},!0),this.scope.$watch(function(){return e.project.coverage},function(n){e.observeCoverage={},e.clearDistrict(n),e.dispatchChange("coverage",n)},!0),this.scope.$watch(function(){return e.project.coverage_second_level},function(n){e.observeCoverageSecondLevel={},e.clearDistrict(n),e.dispatchChange("coverage_second_level",n)},!0),this.scope.$watchGroup([function(){return e.observeCoverage},function(){return e.districtList}],function(n){var t=(0,l.default)(n,2)[1];e.setAvailableDictOptions(e.project.coverage,t,"district"),e.initializeFacilityList(e.project.coverage),e.addClearOption(e.project.coverage)}),this.scope.$watchGroup([function(){return e.observeCoverageSecondLevel},function(){return e.secondSubLevelList}],function(n){var t=(0,l.default)(n,2)[1];e.setAvailableDictOptions(e.project.coverage_second_level,t,"district"),e.initializeFacilityList(e.project.coverage_second_level),e.addClearOption(e.project.coverage_second_level)}),this.scope.$watch(function(e){return e.vm.districtList},this.removeUnavailableDistricts.bind(this))}},{key:"initializeFacilityList",value:function(e){e.forEach(function(e){e.facilities_list=e.facilities_list||[]})}},{key:"updateFacilityNumber",value:function(e){e.facilities=e.facilities_list.length}},{key:"addClearOption",value:function(e){e&&e.length>0&&e.forEach(function(e){-1===e.available.indexOf("Clear selection")&&void 0!==e.district&&e.available.unshift("Clear selection")})}},{key:"clearDistrict",value:function(e){if(e&&e.length>0){var n=!0,t=!1,a=void 0;try{for(var i,r=(0,s.default)(e);!(n=(i=r.next()).done);n=!0){var l=i.value;"Clear selection"===l.district&&(l.district=void 0,l.health_workers=void 0,l.facilities=void 0,l.clients=void 0)}}catch(e){t=!0,a=e}finally{try{!n&&r.return&&r.return()}finally{if(t)throw a}}}}},{key:"removeUnavailableDistricts",value:function(e){this.project.coverage&&this.project.coverage.length>0&&e&&e.length>0&&this.project.coverage.forEach(function(n){-1===e.map(function(e){return e.id}).indexOf(n.district)&&n.district&&(console.warn("The selected location: "+n.district+" is not available anymore"),n.district=void 0)})}},{key:"mapHealthFocusAreas",value:function(e){var n={name:"",subGroups:[]},t=0,a=!0,i=!1,r=void 0;try{for(var l,o=(0,s.default)(e);!(a=(l=o.next()).done);a=!0){var d=l.value;t+=1,d.class="group-"+t,n.subGroups.push(d)}}catch(e){i=!0,r=e}finally{try{!a&&o.return&&o.return()}finally{if(i)throw r}}return[n]}},{key:"searchFacility",value:function(){var e=(0,r.default)(i.default.mark(function e(n,t){return i.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.facilities.filter(function(e){return e.includes(n)&&!t.includes(e)}).slice(0,100));case 1:case"end":return e.stop()}},e,this)}));return function(n,t){return e.apply(this,arguments)}}()},{key:"isSubLevelCoverageDistrictRequired",value:function(e){return!(0,u.default)(e.health_workers)||!(0,u.default)(e.clients)||!(0,u.default)(e.facilities)}},{key:"isSubLevelCoverageRequired",value:function(){return 1===this.project.coverageType&&this.activateValidation}},{key:"isNationalLevelCoverageRequired",value:function(){return 2===this.project.coverageType&&this.activateValidation}}],[{key:"factory",value:function(){function e(e,t,a){return new n(e,t,a)}return t(1490),e.$inject=["$scope","$element","$ngRedux"],e}}]),n}(p.default);n.default=g,e.exports=n.default},756:function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.readOnlyImplementationOverview=void 0;var i=a(t(55)),r=a(t(714)),s=a(t(1489)),l=a(t(1491)),o={template:s.default,controller:r.default.factory(),controllerAs:"vm",name:"implementationOverview",bindings:{form:"<",project:"<",structure:"<",activateValidation:"<"}};n.default=o;n.readOnlyImplementationOverview=(0,i.default)({},o,{name:"readOnlyImplementationOverview",template:l.default})}});