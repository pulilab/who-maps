# Generated by Django 2.1 on 2018-08-08 12:56

import core.models
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0019_django2_20180711_1501'),
        ('country', '0034_django2_20180711_1501'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_en', models.CharField(max_length=255, null=True, unique=True)),
                ('name_fr', models.CharField(max_length=255, null=True, unique=True)),
                ('name_es', models.CharField(max_length=255, null=True, unique=True)),
                ('name_pt', models.CharField(max_length=255, null=True, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('cover_text', models.TextField(blank=True, null=True)),
                ('footer_title', models.CharField(blank=True, max_length=128, null=True)),
                ('footer_text', models.CharField(blank=True, max_length=128, null=True)),
                ('admins', models.ManyToManyField(blank=True, help_text='User who can write questionnaire', related_name='donor_admins', to='user.UserProfile')),
                ('super_admins', models.ManyToManyField(blank=True, help_text='User who can update landing and all above', related_name='donor_super_admins', to='user.UserProfile')),
                ('users', models.ManyToManyField(blank=True, help_text='User/viewer who can read confidential answers', related_name='donor_viewers', to='user.UserProfile')),
            ],
            options={
                'verbose_name_plural': 'Donors',
                'ordering': ('id',),
            },
            bases=(core.models.NameByIDMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DonorPartnerLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(null=True, upload_to='')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_logos', to='country.Donor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='country',
            name='admins',
            field=models.ManyToManyField(blank=True, help_text='User who can write questionnaire', related_name='country_admins', to='user.UserProfile'),
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=models.IntegerField(blank=True, choices=[(0, 'African Region'), (1, 'Region of the Americas'), (2, 'South-East Asia Region'), (3, 'European Region'), (4, 'Eastern Mediterranean Region'), (5, 'Western Pacific Region')], null=True),
        ),
        migrations.AddField(
            model_name='country',
            name='super_admins',
            field=models.ManyToManyField(blank=True, help_text='User who can update landing and all above', related_name='country_super_admins', to='user.UserProfile'),
        ),
        migrations.AlterField(
            model_name='country',
            name='map_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='country',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='User/viewer who can read confidential answers', related_name='country_viewers', to='user.UserProfile'),
        ),
        migrations.AlterField(
            model_name='partnerlogo',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_logos', to='country.Country'),
        ),
    ]
