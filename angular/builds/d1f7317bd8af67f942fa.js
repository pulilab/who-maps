(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[563],{

/***/ "./src/Project/ImplementationOverview/ImplementationOverview.html":
/*!************************************************************************!*\
  !*** ./src/Project/ImplementationOverview/ImplementationOverview.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"project-section section-strategy\\\" md-whiteframe=\\\"2\\\">\\n  <div class=\\\"section-title md-title\\\">\\n    <translate>2. Implementation overview</translate>\\n    <span class=\\\"toggler\\\" ng-click=\\\"vm.collapse()\\\"><i class=\\\"material-icons\\\">keyboard_arrow_down</i></span>\\n  </div>\\n\\n  <div class=\\\"section-wrapper\\\">\\n    <h6 class=\\\"first required\\\">\\n      <translate>Add one or more Software and related Digital Health Interventions (DHI):</translate>\\n    </h6>\\n\\n    <div class=\\\"software-dhi input-group\\\" ng-repeat=\\\"platform in vm.project.platforms\\\">\\n      <div layout=\\\"row\\\">\\n        <md-input-container flex=\\\"33\\\">\\n          <label>\\n            <translate>Software (select from list)</translate>\\n          </label>\\n          <md-select ng-model=\\\"platform.id\\\" name=\\\"{{'platforms_'+ $index + '.id' }}\\\" ng-required=\\\"vm.activateValidation\\\" >\\n            <md-option ng-value=\\\"plat.id\\\" ng-repeat=\\\"plat in platform.available\\\">\\n              {{plat.name}}\\n            </md-option>\\n          </md-select>\\n          <div ng-messages=\\\"vm.form['platforms_' + $index + '.id'].$error\\\">\\n            <div ng-message=\\\"required\\\">\\n              <translate>This is required.</translate>\\n            </div>\\n            <div ng-message=\\\"custom\\\">\\n              <div ng-repeat=\\\"message in vm.form['platforms_' + $index + '.id'].customError\\\">\\n                {{message}}\\n              </div>\\n            </div>\\n          </div>\\n        </md-input-container>\\n\\n        <div class=\\\"add-more-item\\\" flex=\\\"33\\\">\\n          <div layout=\\\"row\\\" layout-align=\\\"start end\\\">\\n            <md-button class=\\\"md-primary\\\" aria-label=\\\"Add more\\\"\\n                       ng-show=\\\"vm.showAddMore($index, vm.project.platforms)\\\"\\n                       ng-click=\\\"vm.addChild('platforms')\\\">\\n              <md-icon><i class=\\\"material-icons\\\">&#xE145;</i></md-icon>\\n              <translate>Add more</translate>\\n            </md-button>\\n            <md-button class=\\\"md-warn\\\" aria-label=\\\"Remove\\\"\\n                       ng-show=\\\"vm.showRemove($index, vm.project.platforms)\\\"\\n                       ng-click=\\\"vm.removeChild($index, 'platforms')\\\">\\n              <md-icon><i class=\\\"material-icons\\\">&#xE15B;</i></md-icon>\\n              <translate>Remove</translate>\\n            </md-button>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <dialog-multi-selector\\n        ng-show=\\\"platform.id\\\"\\n        selection=\\\"platform.strategies\\\"\\n        button-name=\\\"{{'Digital Health Interventions' | translate }}\\\"\\n        is-required=\\\"vm.activateValidation\\\"\\n        show-title=\\\"true\\\"\\n        elements=\\\"vm.structure.strategies\\\"\\n        collection-name=\\\"strategies\\\"\\n        name=\\\"'platforms_'+ $index + '.strategies'\\\"\\n        form-element=\\\"vm.form['platforms_'+ $index + '.strategies']\\\"\\n        dialog-name=\\\"platform.name\\\">\\n      </dialog-multi-selector>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section-wrapper\\\">\\n\\n    <div class=\\\"essential md-block\\\">\\n      <h6>\\n        <translate>Health focus area(s) - select all that apply:</translate>\\n      </h6>\\n      <dialog-multi-selector\\n        selection=\\\"vm.project.health_focus_areas\\\"\\n        button-name=\\\"{{'Health focus area' | translate }}\\\"\\n        elements=\\\"vm.health_focus_areas\\\"\\n        name=\\\"'health_focus_areas'\\\"\\n        on-close=\\\"vm.dispatchChange\\\"\\n        form-element=\\\"vm.form.health_focus_areas\\\"\\n        collection-name=\\\"health_focus_areas\\\">\\n      </dialog-multi-selector>\\n    </div>\\n\\n    <div class=\\\"md-block extra-margin-double\\\">\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>\\n          <translate>What are the Health System Challenges (HSC) your project addresses?</translate>\\n        </label>\\n        <md-select ng-model=\\\"vm.project.hsc_challenges\\\" md-on-close=\\\"vm.dispatchChange('hsc_challenges', vm.project.hsc_challenges)\\\"\\n        md-select-separator=\\\"empty\\\" name=\\\"hsc_challenges\\\" ng-required=\\\"vm.activateValidation\\\" multiple>\\n          <md-optgroup label=\\\"{{hsc.name}}\\\" ng-repeat=\\\"hsc in vm.structure.hsc_challenges\\\">\\n            <md-option value=\\\"{{challenge.id}}\\\" ng-repeat=\\\"challenge in hsc.challenges\\\">\\n              {{challenge.challenge}}\\n            </md-option>\\n          </md-optgroup>\\n        </md-select>\\n        <div ng-messages=\\\"vm.form.hsc.$error\\\">\\n          <div ng-message=\\\"required\\\">\\n            <translate>This is required.</translate>\\n          </div>\\n        </div>\\n      </md-input-container>\\n    </div>\\n\\n    <div class=\\\"md-block first extra-margin-double\\\">\\n      <md-input-container class=\\\"md-block\\\">\\n        <label>\\n          <translate>What part(s) of the Health Information System (HIS) does this project support?</translate>\\n        </label>\\n        <md-select ng-model=\\\"vm.project.his_bucket\\\" md-on-close=\\\"vm.dispatchChange('his_bucket', vm.project.his_bucket)\\\"\\n        md-select-separator=\\\"empty\\\" name=\\\"his_bucket\\\" ng-required=\\\"vm.activateValidation\\\" multiple>\\n          <md-option value=\\\"{{his.id}}\\\" ng-repeat=\\\"his in vm.structure.his_bucket\\\">\\n            {{his.name}}\\n          </md-option>\\n        </md-select>\\n        <div ng-messages=\\\"vm.form.his.$error\\\">\\n          <div ng-message=\\\"required\\\">\\n            <translate>This is required.</translate>\\n          </div>\\n        </div>\\n      </md-input-container>\\n    </div>\\n\\n    <h6 class=\\\"extra-margin required\\\">\\n      <translate>What kind of coverage does your project have?</translate>\\n      </h6>\\n\\n    <div class=\\\"md-block extra-margin\\\">\\n      <div layout=\\\"column\\\">\\n        <md-radio-group ng-model=\\\"vm.project.coverageType\\\"\\n        ng-change=\\\"vm.dispatchChange('coverageType', vm.project.coverageType)\\\"\\n        name=\\\"coverageType\\\" md-no-ink ng-required=\\\"vm.activateValidation\\\" class=\\\"md-primary\\\" layout=\\\"row\\\">\\n          <md-radio-button ng-value=\\\"1\\\" aria-label=\\\"coverage-type-yes\\\">\\n            <translate>Sub-national</translate>\\n          </md-radio-button>\\n          <md-radio-button ng-value=\\\"2\\\" aria-label=\\\"coverage-type-no\\\">\\n            <translate>National</translate>\\n          </md-radio-button>\\n        </md-radio-group>\\n        <div class=\\\"radio-error-messages\\\">\\n          <div ng-messages=\\\"vm.form.coverageType.$error\\\">\\n            <div ng-message=\\\"required\\\">\\n              <translate>This is required.</translate>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div ng-show=\\\"vm.project.coverageType === 1\\\" class=\\\"md-block extra-margin-double\\\">\\n      <h6 class=\\\"subtitle\\\"><i class=\\\"material-icons\\\">&#xE567;</i>\\n        <translate>{{vm.subLevelNames[0]}} level deployment</translate>\\n      </h6>\\n\\n      <div class=\\\"input-group\\\" ng-repeat=\\\"cov in vm.project.coverage\\\">\\n        <div layout=\\\"column\\\">\\n          <div layout=\\\"row\\\">\\n            <md-input-container class=\\\"district\\\" flex=\\\"45\\\">\\n              <label class=\\\"text-capitalize\\\">\\n                {{vm.subLevelNames[0]}}\\n              </label>\\n              <md-select ng-model=\\\"cov.district\\\"\\n                         aria-label=\\\"{{'coverage_' + $index + '.district'}}\\\"\\n                         name=\\\"{{'coverage_' + $index + '.district'}}\\\"\\n                         ng-required=\\\"vm.isSubLevelCoverageDistrictRequired(cov)\\\">\\n                <md-option value=\\\"{{district.id}}\\\" ng-repeat=\\\"district in cov.available\\\">\\n                  {{district.name}}\\n                </md-option>\\n                <md-option md-option-empty ng-hide=\\\"vm.districtList.length\\\">\\n                  <translate>Select a country </translate>\\n                </md-option>\\n              </md-select>\\n              <div ng-messages=\\\"vm.form['coverage_' + $index + '.district'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_' + $index + '.district'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n          </div>\\n\\n          <div layout=\\\"row\\\" ng-if=\\\"vm.facilities.length > 0\\\" class=\\\"no-float\\\">\\n            <md-chips ng-model=\\\"cov.facilities_list\\\" md-autocomplete-snap\\n                      md-on-add=\\\"vm.updateFacilityNumber(cov)\\\"\\n                      md-on-remove=\\\"vm.updateFacilityNumber(cov)\\\"\\n                      md-require-match=\\\"true\\\">\\n              <md-autocomplete\\n                md-no-cache\\n                md-search-text=\\\"cov.facilitySearch\\\"\\n                md-items=\\\"item in vm.searchFacility(cov.facilitySearch, cov.facilities_list)\\\"\\n                md-item-text=\\\"item\\\"\\n                placeholder=\\\"{{'Search Facilities' | translate}}\\\">\\n                <span md-highlight-text=\\\"ctrl.searchText\\\">{{item}}</span>\\n              </md-autocomplete>\\n              <md-chip-template>\\n                <span>\\n                  {{$chip}}\\n                </span>\\n              </md-chip-template>\\n            </md-chips>\\n          </div>\\n\\n          <div layout=\\\"row\\\">\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n              <label>\\n                <translate># Health Workers</translate>\\n              </label>\\n              <input ng-required=\\\"vm.isSubLevelCoverageRequired()\\\"\\n                     name=\\\"{{'coverage_' + $index}}.health_workers\\\"\\n                     type=\\\"number\\\"\\n                     min=\\\"0\\\"\\n                     ng-model=\\\"cov.health_workers\\\" >\\n              <div ng-messages=\\\"vm.form['coverage_' + $index + '.health_workers'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_' + $index + '.health_workers'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\" ng-show=\\\"vm.facilities.length === 0\\\">\\n              <label>\\n                <translate># Facilities</translate>\\n              </label>\\n              <input ng-required=\\\"vm.isSubLevelCoverageRequired()\\\"\\n                     name=\\\"{{'coverage_' + $index}}.facilities\\\"\\n                     type=\\\"number\\\"\\n                     min=\\\"0\\\"\\n                     ng-model=\\\"cov.facilities\\\">\\n              <div ng-messages=\\\"vm.form['coverage_' + $index + '.facilities'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_' + $index + '.facilities'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n              <label>\\n                <translate># Clients</translate>\\n              </label>\\n              <input ng-required=\\\"vm.isSubLevelCoverageRequired()\\\"\\n                     name=\\\"{{'coverage_' + $index}}.clients\\\"\\n                     type=\\\"number\\\"\\n                     min=\\\"0\\\"\\n                     ng-model=\\\"cov.clients\\\">\\n              <div ng-messages=\\\"vm.form['coverage_' + $index + '.clients'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_' + $index + '.clients'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <div class=\\\"add-more-item\\\" flex=\\\"40\\\">\\n              <md-button class=\\\"md-warn\\\" aria-label=\\\"Remove\\\"\\n                         ng-show=\\\"vm.showRemove($index, vm.project.coverage)\\\"\\n                         ng-click=\\\"vm.removeChild($index, 'coverage')\\\">\\n                <md-icon><i class=\\\"material-icons\\\">&#xE15B;</i></md-icon>\\n                <translate>Remove</translate>\\n              </md-button>\\n              <md-button class=\\\"md-primary\\\" aria-label=\\\"Add more\\\"\\n                         ng-show=\\\"vm.showAddMore($index, vm.project.coverage)\\\"\\n                         ng-click=\\\"vm.addChild('coverage')\\\">\\n                <md-icon><i class=\\\"material-icons\\\">&#xE145;</i></md-icon>\\n                <translate>Add more</translate>\\n              </md-button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!--NEW COVERAGE LAYER-->\\n\\n      <h6 class=\\\"subtitle\\\" ng-if-start=\\\"vm.subLevelNames[1]\\\">\\n        <i class=\\\"material-icons\\\">&#xE567;</i>\\n        <translate>{{vm.subLevelNames[1]}} level deployment</translate>\\n      </h6>\\n\\n      <div class=\\\"input-group\\\" ng-repeat=\\\"cov in vm.project.coverage_second_level\\\" ng-if-end>\\n        <div layout=\\\"column\\\">\\n          <div layout=\\\"row\\\">\\n            <md-input-container class=\\\"district\\\" flex=\\\"45\\\">\\n              <label class=\\\"text-capitalize\\\">\\n                {{vm.subLevelNames[1]}}\\n              </label>\\n              <md-select ng-model=\\\"cov.district\\\"\\n                         aria-label=\\\"{{'coverage_second_level_' + $index + '.district'}}\\\"\\n                         name=\\\"{{'coverage_second_level_' + $index + '.district'}}\\\"\\n                         ng-required=\\\"vm.isSubLevelCoverageDistrictRequired(cov)\\\">\\n                <md-option value=\\\"{{district.id}}\\\" ng-repeat=\\\"district in cov.available\\\">\\n                  {{district.name}}\\n                </md-option>\\n                <md-option md-option-empty ng-hide=\\\"vm.secondSubLevelList.length\\\">\\n                  <translate>Select a country </translate>\\n                </md-option>\\n              </md-select>\\n              <div ng-messages=\\\"vm.form['coverage_second_level_' + $index + '.district'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_second_level_' + $index + '.district'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n          </div>\\n          <div layout=\\\"row\\\" ng-if=\\\"vm.facilities.length > 0\\\" class=\\\"no-float\\\">\\n            <md-chips ng-model=\\\"cov.facilities_list\\\" md-autocomplete-snap\\n                      md-on-add=\\\"vm.updateFacilityNumber(cov)\\\"\\n                      md-on-remove=\\\"vm.updateFacilityNumber(cov)\\\"\\n                      md-require-match=\\\"true\\\">\\n              <md-autocomplete\\n                md-no-cache\\n                md-search-text=\\\"cov.facilitySearch\\\"\\n                md-items=\\\"item in vm.searchFacility(cov.facilitySearch, cov.facilities_list)\\\"\\n                md-item-text=\\\"item\\\"\\n                placeholder=\\\"{{'Search Facilities' | translate}}\\\">\\n                <span md-highlight-text=\\\"ctrl.searchText\\\">{{item}}</span>\\n              </md-autocomplete>\\n              <md-chip-template>\\n                <span>\\n                  {{$chip}}\\n                </span>\\n              </md-chip-template>\\n            </md-chips>\\n\\n          </div>\\n          <div layout=\\\"row\\\">\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n              <label>\\n                <translate># Health Workers</translate>\\n              </label>\\n              <input\\n                name=\\\"{{'coverage_second_level_' + $index}}.health_workers\\\"\\n                type=\\\"number\\\"\\n                min=\\\"0\\\"\\n                ng-model=\\\"cov.health_workers\\\" >\\n              <div ng-messages=\\\"vm.form['coverage_second_level_' + $index + '.health_workers'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_second_level_' + $index + '.health_workers'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\" ng-show=\\\"vm.facilities.length === 0\\\">\\n              <label>\\n                <translate># Facilities</translate>\\n              </label>\\n              <input\\n                name=\\\"{{'coverage_second_level_' + $index}}.facilities\\\"\\n                type=\\\"number\\\"\\n                min=\\\"0\\\"\\n                ng-model=\\\"cov.facilities\\\">\\n              <div ng-messages=\\\"vm.form['coverage_second_level_' + $index + '.facilities'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_second_level_' + $index + '.facilities'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n              <label>\\n                <translate># Clients</translate>\\n              </label>\\n              <input\\n                name=\\\"{{'coverage_second_level_' + $index}}.clients\\\"\\n                type=\\\"number\\\"\\n                min=\\\"0\\\"\\n                ng-model=\\\"cov.clients\\\">\\n              <div ng-messages=\\\"vm.form['coverage_second_level_' + $index + '.clients'].$error\\\">\\n                <div ng-message=\\\"required\\\">\\n                  <translate>This is required.</translate>\\n                </div>\\n                <div ng-message=\\\"custom\\\">\\n                  <div ng-repeat=\\\"message in vm.form['coverage_second_level_' + $index + '.clients'].customError\\\">\\n                    {{message}}\\n                  </div>\\n                </div>\\n              </div>\\n            </md-input-container>\\n            <div class=\\\"add-more-item\\\" flex=\\\"40\\\">\\n              <md-button class=\\\"md-warn\\\" aria-label=\\\"Remove\\\"\\n                         ng-show=\\\"vm.showRemove($index, vm.project.coverage_second_level)\\\"\\n                         ng-click=\\\"vm.removeChild($index, 'coverage_second_level')\\\">\\n                <md-icon><i class=\\\"material-icons\\\">&#xE15B;</i></md-icon>\\n                <translate>Remove</translate>\\n              </md-button>\\n              <md-button class=\\\"md-primary\\\" aria-label=\\\"Add more\\\"\\n                         ng-show=\\\"vm.showAddMore($index, vm.project.coverage_second_level)\\\"\\n                         ng-click=\\\"vm.addChild('coverage_second_level')\\\">\\n                <md-icon><i class=\\\"material-icons\\\">&#xE145;</i></md-icon>\\n                <translate>Add more</translate>\\n              </md-button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div ng-show=\\\"vm.project.coverageType === 2\\\" class=\\\"md-block extra-margin-double\\\">\\n      <h6 class=\\\"subtitle first\\\"><i class=\\\"material-icons\\\">&#xE153;</i>\\n        <translate>National level deployment</translate>\\n      </h6>\\n\\n      <div class=\\\"input-group\\\">\\n        <div layout=\\\"row\\\">\\n          <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n            <label>\\n              <translate># Health Workers</translate>\\n            </label>\\n            <input type=\\\"number\\\"\\n                   min=\\\"0\\\"\\n                   name=\\\"national_level_deployment.health_workers\\\"\\n                   ng-change=\\\"vm.dispatchChange('national_level_deployment', vm.project.national_level_deployment)\\\"\\n                   ng-required=\\\"vm.isNationalLevelCoverageRequired()\\\"\\n                   ng-model=\\\"vm.project.national_level_deployment.health_workers\\\">\\n            <div ng-messages=\\\"vm.form['national_level_deployment.health_workers'].$error\\\">\\n              <div ng-message=\\\"required\\\">\\n                <translate>This is required.</translate>\\n              </div>\\n              <div ng-message=\\\"custom\\\">\\n                <div ng-repeat=\\\"message in vm.form['national_level_deployment.health_workers'].customError\\\">\\n                  {{message}}\\n                </div>\\n              </div>\\n            </div>\\n          </md-input-container>\\n          <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n            <label>\\n              <translate># Facilities</translate>\\n            </label>\\n            <input type=\\\"number\\\"\\n                   min=\\\"0\\\"\\n                   name=\\\"national_level_deployment.facilities\\\"\\n                   ng-required=\\\"vm.isNationalLevelCoverageRequired()\\\"\\n                   ng-change=\\\"vm.dispatchChange('national_level_deployment', vm.project.national_level_deployment)\\\"\\n                   ng-model=\\\"vm.project.national_level_deployment.facilities\\\">\\n            <div ng-messages=\\\"vm.form['national_level_deployment.facilities'].$error\\\">\\n              <div ng-message=\\\"required\\\">\\n                <translate>This is required.</translate>\\n              </div>\\n              <div ng-message=\\\"custom\\\">\\n                <div ng-repeat=\\\"message in vm.form['national_level_deployment.facilities'].customError\\\">\\n                  {{message}}\\n                </div>\\n              </div>\\n            </div>\\n          </md-input-container>\\n          <md-input-container class=\\\"number\\\" flex=\\\"20\\\">\\n            <label>\\n              <translate># Clients</translate>\\n            </label>\\n            <input type=\\\"number\\\"\\n                   min=\\\"0\\\"\\n                   name=\\\"national_level_deployment.clients\\\"\\n                   ng-required=\\\"vm.isNationalLevelCoverageRequired()\\\"\\n                   ng-change=\\\"vm.dispatchChange('national_level_deployment', vm.project.national_level_deployment)\\\"\\n                   ng-model=\\\"vm.project.national_level_deployment.clients\\\">\\n            <div ng-messages=\\\"vm.form['national_level_deployment.clients'].$error\\\">\\n              <div ng-message=\\\"required\\\">\\n                <translate>This is required.</translate>\\n              </div>\\n              <div ng-message=\\\"custom\\\">\\n                <div ng-repeat=\\\"message in vm.form['national_level_deployment.clients'].customError\\\">\\n                  {{message}}\\n                </div>\\n              </div>\\n            </div>\\n          </md-input-container>\\n          <div flex=\\\"40\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <h6 class=\\\"required extra-margin\\\">\\n      <translate>Has the government financially invested in the project?</translate>\\n    </h6>\\n\\n    <div class=\\\"md-block extra-margin\\\">\\n      <div layout=\\\"column\\\">\\n        <md-radio-group ng-model=\\\"vm.project.government_investor\\\"\\n        ng-change=\\\"vm.dispatchChange('government_investor', vm.project.government_investor)\\\"\\n        name=\\\"government_investor\\\" md-no-ink ng-required=\\\"vm.activateValidation\\\" class=\\\"md-primary\\\" layout=\\\"column\\\">\\n          <md-radio-button ng-value=\\\"0\\\" aria-label=\\\"government-investor-no\\\">\\n            <translate>No, they have not yet contributed</translate>\\n          </md-radio-button>\\n          <md-radio-button ng-value=\\\"1\\\" aria-label=\\\"government-investor-yes-1\\\">\\n            <translate>Yes, they are contributing in-kind people or time</translate>\\n          </md-radio-button>\\n          <md-radio-button ng-value=\\\"2\\\" aria-label=\\\"government-investor-yes-2\\\">\\n            <translate>Yes, there is a financial contribution through MOH budget</translate>\\n          </md-radio-button>\\n        </md-radio-group>\\n        <div class=\\\"radio-error-messages\\\">\\n          <div ng-messages=\\\"vm.form.government_investor.$error\\\">\\n            <div ng-message=\\\"required\\\">\\n              <translate>This is required.</translate>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <h6>\\n      <translate>Implementing partners</translate>\\n    </h6>\\n\\n    <md-input-container class=\\\"error-placeholder\\\">\\n      <input  name=\\\"implementing_partners\\\" ng-model=\\\"vm.hiddenFields\\\" aria-label=\\\"hidden\\\">\\n      <div ng-messages=\\\"vm.form.implementing_partners.$error\\\">\\n        <div ng-message=\\\"custom\\\">\\n          <div ng-repeat=\\\"message in vm.form.implementing_partners.customError\\\">\\n            {{message}}\\n          </div>\\n        </div>\\n      </div>\\n    </md-input-container>\\n\\n    <div layout=\\\"row\\\" ng-repeat=\\\"partner in vm.project.implementing_partners\\\" ng-class=\\\"{last: $last}\\\" class=\\\"no-float\\\">\\n      <md-input-container md-no-float flex=\\\"50\\\">\\n        <input ng-model=\\\"partner.value\\\"\\n               ng-change=\\\"vm.dispatchChange('implementing_partners', vm.project.implementing_partners)\\\"\\n               placeholder=\\\"{{'Partner\\\\'s name' | translate }}\\\"\\n               md-maxlength=\\\"64\\\">\\n      </md-input-container>\\n      <div class=\\\"add-more-item\\\">\\n        <md-button class=\\\"md-warn\\\" aria-label=\\\"Remove\\\"\\n                   ng-show=\\\"vm.showRemove($index, vm.project.implementing_partners)\\\"\\n                   ng-click=\\\"vm.removeChild($index, 'implementing_partners')\\\">\\n          <md-icon><i class=\\\"material-icons\\\">&#xE15B;</i></md-icon>\\n          <translate>Remove</translate>\\n        </md-button>\\n        <md-button class=\\\"md-primary\\\" aria-label=\\\"Add more\\\"\\n                   ng-show=\\\"vm.showAddMore($index, vm.project.implementing_partners)\\\"\\n                   ng-click=\\\"vm.addChild('implementing_partners')\\\">\\n          <md-icon><i class=\\\"material-icons\\\">&#xE145;</i></md-icon>\\n          <translate>Add more</translate>\\n        </md-button>\\n      </div>\\n    </div>\\n\\n    <h6 class=\\\"required\\\">\\n      <translate>Donors (Add one at least)</translate>\\n    </h6>\\n\\n    <md-input-container class=\\\"error-placeholder\\\">\\n      <input  name=\\\"donors\\\" ng-model=\\\"vm.hiddenFields\\\" aria-label=\\\"hidden\\\">\\n      <div ng-messages=\\\"vm.form.donors.$error\\\">\\n        <div ng-message=\\\"custom\\\">\\n          <div ng-repeat=\\\"message in vm.form.donors.customError\\\">\\n            {{message}}\\n          </div>\\n        </div>\\n      </div>\\n    </md-input-container>\\n\\n    <div layout=\\\"row\\\" ng-repeat=\\\"donor in vm.project.donors\\\" ng-class=\\\"{last: $last}\\\" class=\\\"no-float\\\">\\n      <md-input-container md-no-float flex=\\\"50\\\">\\n        <input ng-model=\\\"donor.value\\\"\\n               ng-change=\\\"vm.dispatchChange('donors', vm.project.donors)\\\"\\n               placeholder=\\\"{{'Donor\\\\'s name' | translate }}\\\"\\n               md-maxlength=\\\"64\\\" ng-required=\\\"vm.activateValidation\\\" name=\\\"{{'donor_' + $index}}\\\">\\n        <div ng-messages=\\\"vm.form['donor_' + $index].$error\\\">\\n          <div ng-message=\\\"required\\\">\\n            <translate>This is required.</translate>\\n          </div>\\n          <div ng-message=\\\"md-maxlength\\\">\\n            <translate>This field has to be less than 64 characters long.</translate>\\n          </div>\\n        </div>\\n      </md-input-container>\\n\\n      <div class=\\\"add-more-item\\\">\\n        <md-button class=\\\"md-warn\\\" aria-label=\\\"Remove\\\"\\n                   ng-show=\\\"vm.showRemove($index, vm.project.donors)\\\"\\n                   ng-click=\\\"vm.removeChild($index, 'donors')\\\">\\n          <md-icon><i class=\\\"material-icons\\\">&#xE15B;</i></md-icon>\\n          <translate>Remove</translate>\\n        </md-button>\\n        <md-button class=\\\"md-primary\\\" aria-label=\\\"Add more\\\"\\n                   ng-show=\\\"vm.showAddMore($index, vm.project.donors)\\\"\\n                   ng-click=\\\"vm.addChild('donors')\\\">\\n          <md-icon><i class=\\\"material-icons\\\">&#xE145;</i></md-icon>\\n          <translate>Add more</translate>\\n        </md-button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Project/ImplementationOverview/ImplementationOverview.html\n");

/***/ })

}]);